version: '3.8'

services:
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/loyalty_program
      - ENVIRONMENT=production
      - SECRET_KEY=${SECRET_KEY}
      - YOCO_SECRET_KEY=${YOCO_SECRET_KEY}
      - YOCO_WEBHOOK_SECRET=${YOCO_WEBHOOK_SECRET}
      - FIREBASE_CREDENTIALS_PATH=/app/firebase-credentials.json
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_PUBLIC_META_CAPACITY=100
      - RATE_LIMIT_PUBLIC_META_WINDOW=60
    volumes:
      - ./firebase-credentials.json:/app/firebase-credentials.json:ro
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://backend:8000
      - VITE_ENVIRONMENT=production
    depends_on:
      - backend

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=loyalty_program
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:

networks:
  default:
    driver: bridge
