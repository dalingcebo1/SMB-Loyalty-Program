name: Backend CI (legacy wrapper)

on:
  push:
    paths:
      - 'Backend/**'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - 'Backend/**'
      - '.github/workflows/ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - '5432:5432'
        options: >-
          --health-cmd "pg_isready -U postgres -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd):$(pwd)/Backend" >> $GITHUB_ENV

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Backend/requirements.txt
          pip install ruff mypy pip-audit pytest-cov

      - name: Import smoke check
        run: |
          python - <<'PY'
          import importlib, sys
          print('[debug] sys.path head:', sys.path[:5])
          for mod in ('config', 'app.core.database', 'app.models'):
              importlib.import_module(mod)
              print(f'[debug] Imported {mod} OK')
          print('[debug] Import smoke check passed.')
          PY

      - name: Run migrations
        run: alembic -c Backend/alembic.ini upgrade head

      - name: Migration drift check
        run: python Backend/scripts/check_migration_drift.py || echo "[warn] Drift check script missing or failed (non-blocking here)."

      - name: Lint (ruff)
        run: ruff check Backend

      - name: Format check (ruff)
        run: ruff format --check Backend || echo "Formatting issues detected (non-blocking)."

      - name: Type check (mypy)
        run: mypy Backend --ignore-missing-imports

      - name: Security audit (pip-audit)
        run: pip-audit -r Backend/requirements.txt || echo "[warn] Vulnerabilities detected (legacy workflow non-blocking)."

      - name: Tests (pytest quick)
        run: pytest Backend/tests -q --maxfail=1 || pytest Backend/tests -q

      - name: Coverage (informational)
        run: pytest --cov=Backend --cov-report=term-missing -q || echo "[warn] Coverage step failed (non-blocking legacy)."
