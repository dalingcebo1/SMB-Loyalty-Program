{
  "_snapshot_meta": {
    "note": "Do not hand-edit. Regenerate with dump_openapi.py"
  },
  "components": {
    "schemas": {
      "AdminAssign": {
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          }
        },
        "required": [
          "user_id"
        ],
        "title": "AdminAssign",
        "type": "object"
      },
      "AnalyticsSummaryResponse": {
        "properties": {
          "points_issued": {
            "title": "Points Issued",
            "type": "number"
          },
          "points_redeemed": {
            "title": "Points Redeemed",
            "type": "number"
          },
          "redemptions_count": {
            "title": "Redemptions Count",
            "type": "integer"
          },
          "tier_distribution": {
            "items": {
              "$ref": "#/components/schemas/TierDistributionItem"
            },
            "title": "Tier Distribution",
            "type": "array"
          },
          "top_rewards": {
            "items": {
              "$ref": "#/components/schemas/TopRewardItem"
            },
            "title": "Top Rewards",
            "type": "array"
          },
          "transaction_count": {
            "title": "Transaction Count",
            "type": "integer"
          },
          "transaction_volume": {
            "items": {
              "$ref": "#/components/schemas/DailyValue"
            },
            "title": "Transaction Volume",
            "type": "array"
          },
          "user_count": {
            "title": "User Count",
            "type": "integer"
          },
          "user_growth": {
            "items": {
              "$ref": "#/components/schemas/DailyCount"
            },
            "title": "User Growth",
            "type": "array"
          },
          "visits_over_time": {
            "items": {
              "$ref": "#/components/schemas/DailyCount"
            },
            "title": "Visits Over Time",
            "type": "array"
          },
          "visits_total": {
            "title": "Visits Total",
            "type": "integer"
          }
        },
        "required": [
          "user_count",
          "transaction_count",
          "points_issued",
          "points_redeemed",
          "redemptions_count",
          "user_growth",
          "transaction_volume",
          "tier_distribution",
          "visits_total",
          "visits_over_time",
          "top_rewards"
        ],
        "title": "AnalyticsSummaryResponse",
        "type": "object"
      },
      "AssignVehicleRequest": {
        "properties": {
          "make": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Make"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "plate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Plate"
          },
          "vehicle_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vehicle Id"
          }
        },
        "title": "AssignVehicleRequest",
        "type": "object"
      },
      "AuthResponse": {
        "properties": {
          "message": {
            "title": "Message",
            "type": "string"
          },
          "token": {
            "title": "Token",
            "type": "string"
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserInfo"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "message",
          "token"
        ],
        "title": "AuthResponse",
        "type": "object"
      },
      "BillingProfile": {
        "properties": {
          "address_line1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Line1"
          },
          "address_line2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Line2"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "company": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "vat_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vat Number"
          }
        },
        "title": "BillingProfile",
        "type": "object"
      },
      "Body_login_api_auth_login_post": {
        "properties": {
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "format": "password",
            "title": "Client Secret"
          },
          "grant_type": {
            "anyOf": [
              {
                "pattern": "^password$",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "password": {
            "format": "password",
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "default": "",
            "title": "Scope",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_api_auth_login_post",
        "type": "object"
      },
      "Body_upload_branding_asset_api_tenants__tenant_id__branding_assets__field__post": {
        "properties": {
          "file": {
            "format": "binary",
            "title": "File",
            "type": "string"
          }
        },
        "required": [
          "file"
        ],
        "title": "Body_upload_branding_asset_api_tenants__tenant_id__branding_assets__field__post",
        "type": "object"
      },
      "BrandingAssetUploadOut": {
        "properties": {
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type"
          },
          "etag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Etag"
          },
          "field": {
            "title": "Field",
            "type": "string"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "variants": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variants"
          }
        },
        "required": [
          "field",
          "url",
          "size",
          "content_type"
        ],
        "title": "BrandingAssetUploadOut",
        "type": "object"
      },
      "BrandingOut": {
        "properties": {
          "accent_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent Color"
          },
          "app_icon_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Icon Url"
          },
          "extra": {
            "additionalProperties": true,
            "title": "Extra",
            "type": "object"
          },
          "favicon_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Favicon Url"
          },
          "logo_dark_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Dark Url"
          },
          "logo_light_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Light Url"
          },
          "primary_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary Color"
          },
          "public_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public Name"
          },
          "secondary_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secondary Color"
          },
          "short_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Name"
          },
          "support_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Email"
          },
          "support_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Phone"
          }
        },
        "required": [
          "public_name",
          "short_name",
          "primary_color",
          "secondary_color",
          "accent_color",
          "logo_light_url",
          "logo_dark_url",
          "favicon_url",
          "app_icon_url",
          "support_email",
          "support_phone",
          "extra"
        ],
        "title": "BrandingOut",
        "type": "object"
      },
      "BrandingUpdate": {
        "properties": {
          "accent_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent Color"
          },
          "app_icon_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Icon Url"
          },
          "extra": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "favicon_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Favicon Url"
          },
          "logo_dark_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Dark Url"
          },
          "logo_light_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Light Url"
          },
          "primary_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary Color"
          },
          "public_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public Name"
          },
          "secondary_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secondary Color"
          },
          "short_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Name"
          },
          "support_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Email"
          },
          "support_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Support Phone"
          }
        },
        "title": "BrandingUpdate",
        "type": "object"
      },
      "ChurnCandidate": {
        "properties": {
          "churn_risk_flag": {
            "title": "Churn Risk Flag",
            "type": "boolean"
          },
          "days_since_last": {
            "title": "Days Since Last",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "percentile": {
            "title": "Percentile",
            "type": "number"
          },
          "user_id": {
            "title": "User Id",
            "type": "integer"
          }
        },
        "required": [
          "user_id",
          "name",
          "days_since_last",
          "percentile",
          "churn_risk_flag"
        ],
        "title": "ChurnCandidate",
        "type": "object"
      },
      "CompleteInviteRequest": {
        "properties": {
          "email": {
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "phone": {
            "title": "Phone",
            "type": "string"
          },
          "token": {
            "title": "Token",
            "type": "string"
          }
        },
        "required": [
          "token",
          "email",
          "password",
          "first_name",
          "last_name",
          "phone"
        ],
        "title": "CompleteInviteRequest",
        "type": "object"
      },
      "CompleteStepRequest": {
        "properties": {
          "data": {
            "additionalProperties": true,
            "title": "Data",
            "type": "object"
          },
          "step": {
            "title": "Step",
            "type": "string"
          }
        },
        "required": [
          "step",
          "data"
        ],
        "title": "CompleteStepRequest",
        "type": "object"
      },
      "ConfirmOtpRequest": {
        "properties": {
          "code": {
            "title": "Code",
            "type": "string"
          },
          "email": {
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "phone": {
            "title": "Phone",
            "type": "string"
          },
          "session_id": {
            "title": "Session Id",
            "type": "string"
          },
          "tenant_id": {
            "title": "Tenant Id",
            "type": "string"
          }
        },
        "required": [
          "session_id",
          "code",
          "first_name",
          "last_name",
          "phone",
          "email",
          "tenant_id"
        ],
        "title": "ConfirmOtpRequest",
        "type": "object"
      },
      "CreateBusinessRequest": {
        "properties": {
          "business_name": {
            "title": "Business Name",
            "type": "string"
          },
          "owner_email": {
            "format": "email",
            "title": "Owner Email",
            "type": "string"
          },
          "owner_first_name": {
            "title": "Owner First Name",
            "type": "string"
          },
          "owner_last_name": {
            "title": "Owner Last Name",
            "type": "string"
          },
          "owner_phone": {
            "title": "Owner Phone",
            "type": "string"
          },
          "primary_domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary Domain"
          },
          "vertical_type": {
            "title": "Vertical Type",
            "type": "string"
          }
        },
        "required": [
          "business_name",
          "vertical_type",
          "owner_email",
          "owner_first_name",
          "owner_last_name",
          "owner_phone"
        ],
        "title": "CreateBusinessRequest",
        "type": "object"
      },
      "CustomerDetailResponse": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "last_order_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Order Date"
          },
          "loyalty_points": {
            "default": 0,
            "minimum": 0.0,
            "title": "Loyalty Points",
            "type": "integer"
          },
          "loyalty_summary": {
            "$ref": "#/components/schemas/LoyaltySummary"
          },
          "order_count": {
            "default": 0,
            "minimum": 0.0,
            "title": "Order Count",
            "type": "integer"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "recent_orders": {
            "default": [],
            "items": {
              "$ref": "#/components/schemas/CustomerOrder"
            },
            "title": "Recent Orders",
            "type": "array"
          },
          "role": {
            "title": "Role",
            "type": "string"
          },
          "total_spent": {
            "default": 0,
            "description": "Total spent in account currency",
            "title": "Total Spent",
            "type": "number"
          },
          "vehicles": {
            "default": [],
            "items": {
              "$ref": "#/components/schemas/CustomerVehicle"
            },
            "title": "Vehicles",
            "type": "array"
          }
        },
        "required": [
          "id",
          "email",
          "first_name",
          "last_name",
          "phone",
          "role",
          "created_at",
          "loyalty_summary"
        ],
        "title": "CustomerDetailResponse",
        "type": "object"
      },
      "CustomerListItem": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "last_order_date": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Order Date"
          },
          "loyalty_points": {
            "default": 0,
            "minimum": 0.0,
            "title": "Loyalty Points",
            "type": "integer"
          },
          "order_count": {
            "default": 0,
            "minimum": 0.0,
            "title": "Order Count",
            "type": "integer"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "role": {
            "title": "Role",
            "type": "string"
          },
          "total_spent": {
            "default": 0,
            "description": "Total spent in account currency",
            "title": "Total Spent",
            "type": "number"
          }
        },
        "required": [
          "id",
          "email",
          "first_name",
          "last_name",
          "phone",
          "role",
          "created_at"
        ],
        "title": "CustomerListItem",
        "type": "object"
      },
      "CustomerListResponse": {
        "properties": {
          "customers": {
            "items": {
              "$ref": "#/components/schemas/CustomerListItem"
            },
            "title": "Customers",
            "type": "array"
          },
          "limit": {
            "title": "Limit",
            "type": "integer"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "total": {
            "title": "Total",
            "type": "integer"
          },
          "total_pages": {
            "title": "Total Pages",
            "type": "integer"
          }
        },
        "required": [
          "customers",
          "total",
          "page",
          "limit",
          "total_pages"
        ],
        "title": "CustomerListResponse",
        "type": "object"
      },
      "CustomerOrder": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "service_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Name"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "total_amount": {
            "title": "Total Amount",
            "type": "number"
          },
          "vehicle_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vehicle Info"
          }
        },
        "required": [
          "id",
          "service_name",
          "total_amount",
          "status",
          "created_at"
        ],
        "title": "CustomerOrder",
        "type": "object"
      },
      "CustomerUpdate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          }
        },
        "title": "CustomerUpdate",
        "type": "object"
      },
      "CustomerVehicle": {
        "properties": {
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "license_plate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Plate"
          },
          "make": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Make"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Year"
          }
        },
        "required": [
          "id",
          "make",
          "model"
        ],
        "title": "CustomerVehicle",
        "type": "object"
      },
      "DailyCount": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "date": {
            "title": "Date",
            "type": "string"
          }
        },
        "required": [
          "date",
          "count"
        ],
        "title": "DailyCount",
        "type": "object"
      },
      "DailyValue": {
        "properties": {
          "date": {
            "title": "Date",
            "type": "string"
          },
          "value": {
            "title": "Value",
            "type": "number"
          }
        },
        "required": [
          "date",
          "value"
        ],
        "title": "DailyValue",
        "type": "object"
      },
      "EnqueueRequest": {
        "properties": {
          "interval_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interval Seconds"
          },
          "max_retries": {
            "default": 0,
            "title": "Max Retries",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "payload": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payload"
          }
        },
        "required": [
          "name"
        ],
        "title": "EnqueueRequest",
        "type": "object"
      },
      "ExtraItem": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "quantity": {
            "title": "Quantity",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "quantity"
        ],
        "title": "ExtraItem",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "InviteOut": {
        "properties": {
          "expires_at": {
            "format": "date-time",
            "title": "Expires At",
            "type": "string"
          },
          "token": {
            "title": "Token",
            "type": "string"
          }
        },
        "required": [
          "token",
          "expires_at"
        ],
        "title": "InviteOut",
        "type": "object"
      },
      "InviteValidationOut": {
        "properties": {
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "loyalty_type": {
            "title": "Loyalty Type",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "subdomain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subdomain"
          },
          "tenant_id": {
            "title": "Tenant Id",
            "type": "string"
          },
          "theme_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Theme Color"
          }
        },
        "required": [
          "tenant_id",
          "name",
          "loyalty_type",
          "subdomain",
          "logo_url",
          "theme_color"
        ],
        "title": "InviteValidationOut",
        "type": "object"
      },
      "LoginResponse": {
        "properties": {
          "access_token": {
            "title": "Access Token",
            "type": "string"
          },
          "next_step": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Step"
          },
          "onboarding_required": {
            "title": "Onboarding Required",
            "type": "boolean"
          },
          "token_type": {
            "default": "bearer",
            "title": "Token Type",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/app__plugins__auth__routes__UserOut"
          }
        },
        "required": [
          "access_token",
          "onboarding_required",
          "user"
        ],
        "title": "LoginResponse",
        "type": "object"
      },
      "LoyaltyAnalyticsResponse": {
        "properties": {
          "churn_candidates": {
            "items": {
              "$ref": "#/components/schemas/ChurnCandidate"
            },
            "title": "Churn Candidates",
            "type": "array"
          },
          "overview": {
            "$ref": "#/components/schemas/LoyaltyOverview"
          },
          "top_customers": {
            "items": {
              "$ref": "#/components/schemas/TopCustomerItem"
            },
            "title": "Top Customers",
            "type": "array"
          }
        },
        "required": [
          "overview",
          "top_customers",
          "churn_candidates"
        ],
        "title": "LoyaltyAnalyticsResponse",
        "type": "object"
      },
      "LoyaltyOverview": {
        "properties": {
          "avg_points_redeemed_per_wash": {
            "title": "Avg Points Redeemed Per Wash",
            "type": "number"
          },
          "loyalty_penetration": {
            "title": "Loyalty Penetration",
            "type": "number"
          },
          "outstanding_points": {
            "title": "Outstanding Points",
            "type": "integer"
          },
          "total_points_earned": {
            "title": "Total Points Earned",
            "type": "integer"
          },
          "total_points_redeemed": {
            "title": "Total Points Redeemed",
            "type": "integer"
          }
        },
        "required": [
          "loyalty_penetration",
          "avg_points_redeemed_per_wash",
          "total_points_redeemed",
          "total_points_earned",
          "outstanding_points"
        ],
        "title": "LoyaltyOverview",
        "type": "object"
      },
      "LoyaltySummary": {
        "properties": {
          "current_points": {
            "title": "Current Points",
            "type": "integer"
          },
          "next_tier_points": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Tier Points"
          },
          "tier_name": {
            "title": "Tier Name",
            "type": "string"
          },
          "total_earned": {
            "title": "Total Earned",
            "type": "integer"
          },
          "total_redeemed": {
            "title": "Total Redeemed",
            "type": "integer"
          }
        },
        "required": [
          "current_points",
          "total_earned",
          "total_redeemed",
          "tier_name",
          "next_tier_points"
        ],
        "title": "LoyaltySummary",
        "type": "object"
      },
      "ManualUserCreate": {
        "properties": {
          "email": {
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "user",
            "title": "Role"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          }
        },
        "required": [
          "email",
          "password",
          "first_name",
          "last_name",
          "phone",
          "tenant_id"
        ],
        "title": "ManualUserCreate",
        "type": "object"
      },
      "NotificationCreate": {
        "properties": {
          "action_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Url"
          },
          "all_users": {
            "default": false,
            "title": "All Users",
            "type": "boolean"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "user_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Ids"
          }
        },
        "required": [
          "title",
          "message",
          "type"
        ],
        "title": "NotificationCreate",
        "type": "object"
      },
      "NotificationResponse": {
        "properties": {
          "action_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Url"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "read_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read At"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "message",
          "type",
          "created_at"
        ],
        "title": "NotificationResponse",
        "type": "object"
      },
      "OrderCreateRequest": {
        "properties": {
          "extras": {
            "items": {
              "$ref": "#/components/schemas/ExtraItem"
            },
            "title": "Extras",
            "type": "array"
          },
          "quantity": {
            "title": "Quantity",
            "type": "integer"
          },
          "service_id": {
            "title": "Service Id",
            "type": "integer"
          }
        },
        "required": [
          "service_id",
          "quantity",
          "extras"
        ],
        "title": "OrderCreateRequest",
        "type": "object"
      },
      "OrderCreateResponse": {
        "properties": {
          "default_vehicle_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Vehicle Id"
          },
          "order_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Order Id"
          },
          "payment_pin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Pin"
          },
          "qr_data": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Qr Data"
          }
        },
        "required": [
          "order_id",
          "qr_data"
        ],
        "title": "OrderCreateResponse",
        "type": "object"
      },
      "OrderDetailResponse": {
        "properties": {
          "amount": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount"
          },
          "bayNumber": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Baynumber"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "createdAt": {
            "format": "date-time",
            "title": "Createdat",
            "type": "string"
          },
          "endedAt": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endedat"
          },
          "estimatedWashTime": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimatedwashtime"
          },
          "extras": {
            "items": {},
            "title": "Extras",
            "type": "array"
          },
          "loyaltyEligible": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Loyaltyeligible"
          },
          "nextActionUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nextactionurl"
          },
          "nextMilestone": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nextmilestone"
          },
          "notificationMessage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notificationmessage"
          },
          "orderId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Orderid"
          },
          "paymentPin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paymentpin"
          },
          "progress": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "title": "Progress"
          },
          "qrData": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Qrdata"
          },
          "quantity": {
            "title": "Quantity",
            "type": "integer"
          },
          "redeemed": {
            "title": "Redeemed",
            "type": "boolean"
          },
          "serviceId": {
            "title": "Serviceid",
            "type": "integer"
          },
          "serviceName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Servicename"
          },
          "startedAt": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Startedat"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "upcomingRewards": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": [],
            "title": "Upcomingrewards"
          },
          "userId": {
            "title": "Userid",
            "type": "integer"
          },
          "vehicles": {
            "default": [],
            "items": {
              "type": "integer"
            },
            "title": "Vehicles",
            "type": "array"
          },
          "visits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": 0,
            "title": "Visits"
          }
        },
        "required": [
          "orderId",
          "serviceId",
          "quantity",
          "extras",
          "paymentPin",
          "status",
          "userId",
          "createdAt",
          "redeemed"
        ],
        "title": "OrderDetailResponse",
        "type": "object"
      },
      "OrderResponse": {
        "properties": {
          "createdAt": {
            "format": "date-time",
            "title": "Createdat",
            "type": "string"
          },
          "endedAt": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endedat"
          },
          "extras": {
            "items": {},
            "title": "Extras",
            "type": "array"
          },
          "orderId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Orderid"
          },
          "paymentPin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paymentpin"
          },
          "quantity": {
            "title": "Quantity",
            "type": "integer"
          },
          "redeemed": {
            "title": "Redeemed",
            "type": "boolean"
          },
          "serviceId": {
            "title": "Serviceid",
            "type": "integer"
          },
          "startedAt": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Startedat"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "userId": {
            "title": "Userid",
            "type": "integer"
          }
        },
        "required": [
          "orderId",
          "serviceId",
          "quantity",
          "extras",
          "paymentPin",
          "status",
          "userId",
          "createdAt",
          "redeemed"
        ],
        "title": "OrderResponse",
        "type": "object"
      },
      "OverridePayload": {
        "properties": {
          "enabled": {
            "title": "Enabled",
            "type": "boolean"
          },
          "module_key": {
            "title": "Module Key",
            "type": "string"
          }
        },
        "required": [
          "module_key",
          "enabled"
        ],
        "title": "OverridePayload",
        "type": "object"
      },
      "PaginatedUsers": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/app__plugins__users__routes__UserOut"
            },
            "title": "Items",
            "type": "array"
          },
          "total": {
            "title": "Total",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "total"
        ],
        "title": "PaginatedUsers",
        "type": "object"
      },
      "PasswordResetEmailRequest": {
        "properties": {
          "email": {
            "format": "email",
            "title": "Email",
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "title": "PasswordResetEmailRequest",
        "type": "object"
      },
      "PasswordResetRequest": {
        "properties": {
          "email": {
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "new_password": {
            "title": "New Password",
            "type": "string"
          }
        },
        "required": [
          "email",
          "new_password"
        ],
        "title": "PasswordResetRequest",
        "type": "object"
      },
      "PasswordResetTokenRequest": {
        "properties": {
          "new_password": {
            "title": "New Password",
            "type": "string"
          },
          "token": {
            "title": "Token",
            "type": "string"
          }
        },
        "required": [
          "token",
          "new_password"
        ],
        "title": "PasswordResetTokenRequest",
        "type": "object"
      },
      "PeakDay": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "day": {
            "title": "Day",
            "type": "string"
          }
        },
        "required": [
          "day",
          "count"
        ],
        "title": "PeakDay",
        "type": "object"
      },
      "PeakHour": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "hour": {
            "title": "Hour",
            "type": "string"
          }
        },
        "required": [
          "hour",
          "count"
        ],
        "title": "PeakHour",
        "type": "object"
      },
      "PhoneIn": {
        "properties": {
          "phone": {
            "title": "Phone",
            "type": "string"
          }
        },
        "required": [
          "phone"
        ],
        "title": "PhoneIn",
        "type": "object"
      },
      "PlanIn": {
        "properties": {
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": true,
            "title": "Active"
          },
          "billing_period": {
            "title": "Billing Period",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "module_keys": {
            "default": [],
            "items": {
              "type": "string"
            },
            "title": "Module Keys",
            "type": "array"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "price_cents": {
            "title": "Price Cents",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "price_cents",
          "billing_period"
        ],
        "title": "PlanIn",
        "type": "object"
      },
      "PlanOut": {
        "properties": {
          "active": {
            "default": true,
            "title": "Active",
            "type": "boolean"
          },
          "billing_period": {
            "title": "Billing Period",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "modules": {
            "items": {
              "type": "string"
            },
            "title": "Modules",
            "type": "array"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "price_cents": {
            "title": "Price Cents",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "price_cents",
          "billing_period",
          "modules"
        ],
        "title": "PlanOut",
        "type": "object"
      },
      "ProfileResponse": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "loyalty_stats": {
            "additionalProperties": true,
            "default": {},
            "title": "Loyalty Stats",
            "type": "object"
          },
          "onboarded": {
            "title": "Onboarded",
            "type": "boolean"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "role": {
            "title": "Role",
            "type": "string"
          },
          "vehicles": {
            "default": [],
            "items": {
              "$ref": "#/components/schemas/VehicleResponse"
            },
            "title": "Vehicles",
            "type": "array"
          }
        },
        "required": [
          "id",
          "email",
          "onboarded",
          "created_at",
          "role"
        ],
        "title": "ProfileResponse",
        "type": "object"
      },
      "ProfileUpdate": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          }
        },
        "title": "ProfileUpdate",
        "type": "object"
      },
      "RateLimitOverride": {
        "properties": {
          "capacity": {
            "title": "Capacity",
            "type": "integer"
          },
          "per_seconds": {
            "title": "Per Seconds",
            "type": "number"
          },
          "scope": {
            "title": "Scope",
            "type": "string"
          }
        },
        "required": [
          "scope",
          "capacity",
          "per_seconds"
        ],
        "title": "RateLimitOverride",
        "type": "object"
      },
      "RedeemIn": {
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          }
        },
        "required": [
          "token"
        ],
        "title": "RedeemIn",
        "type": "object"
      },
      "RegisterUser": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "title": "Phone",
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "phone"
        ],
        "title": "RegisterUser",
        "type": "object"
      },
      "SignupRequest": {
        "properties": {
          "email": {
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "title": "SignupRequest",
        "type": "object"
      },
      "SocialLoginRequest": {
        "properties": {
          "id_token": {
            "title": "Id Token",
            "type": "string"
          }
        },
        "required": [
          "id_token"
        ],
        "title": "SocialLoginRequest",
        "type": "object"
      },
      "StaffRegisterRequest": {
        "properties": {
          "email": {
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "phone": {
            "title": "Phone",
            "type": "string"
          },
          "tenant_id": {
            "title": "Tenant Id",
            "type": "string"
          }
        },
        "required": [
          "email",
          "password",
          "first_name",
          "last_name",
          "phone",
          "tenant_id"
        ],
        "title": "StaffRegisterRequest",
        "type": "object"
      },
      "SubscriptionSetup": {
        "properties": {
          "billing_profile": {
            "$ref": "#/components/schemas/BillingProfile"
          },
          "payment_method_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method Token"
          },
          "plan_id": {
            "title": "Plan Id",
            "type": "integer"
          }
        },
        "required": [
          "plan_id",
          "billing_profile"
        ],
        "title": "SubscriptionSetup",
        "type": "object"
      },
      "TenantAssignPlan": {
        "properties": {
          "plan_id": {
            "title": "Plan Id",
            "type": "integer"
          }
        },
        "required": [
          "plan_id"
        ],
        "title": "TenantAssignPlan",
        "type": "object"
      },
      "TenantCreate": {
        "properties": {
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "loyalty_type": {
            "title": "Loyalty Type",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "primary_domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary Domain"
          },
          "subdomain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subdomain"
          },
          "theme_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Theme Color"
          },
          "vertical_type": {
            "$ref": "#/components/schemas/VerticalType",
            "default": "carwash"
          }
        },
        "required": [
          "id",
          "name",
          "loyalty_type"
        ],
        "title": "TenantCreate",
        "type": "object"
      },
      "TenantInvite": {
        "properties": {
          "email": {
            "format": "email",
            "title": "Email",
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "title": "TenantInvite",
        "type": "object"
      },
      "TenantOut": {
        "properties": {
          "admin_ids": {
            "items": {
              "type": "integer"
            },
            "title": "Admin Ids",
            "type": "array"
          },
          "config": {
            "additionalProperties": true,
            "title": "Config",
            "type": "object"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "loyalty_type": {
            "title": "Loyalty Type",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "primary_domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary Domain"
          },
          "subdomain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subdomain"
          },
          "theme_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Theme Color"
          },
          "vertical_type": {
            "title": "Vertical Type",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "loyalty_type",
          "vertical_type",
          "primary_domain",
          "subdomain",
          "logo_url",
          "theme_color",
          "admin_ids",
          "config"
        ],
        "title": "TenantOut",
        "type": "object"
      },
      "TenantUpdate": {
        "properties": {
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "loyalty_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Loyalty Type"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "primary_domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary Domain"
          },
          "subdomain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subdomain"
          },
          "theme_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Theme Color"
          },
          "vertical_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VerticalType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "TenantUpdate",
        "type": "object"
      },
      "TierDistributionItem": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "tier": {
            "title": "Tier",
            "type": "string"
          }
        },
        "required": [
          "tier",
          "count"
        ],
        "title": "TierDistributionItem",
        "type": "object"
      },
      "Token": {
        "properties": {
          "access_token": {
            "title": "Access Token",
            "type": "string"
          }
        },
        "required": [
          "access_token"
        ],
        "title": "Token",
        "type": "object"
      },
      "TopCustomerItem": {
        "properties": {
          "avg_spend_cents": {
            "title": "Avg Spend Cents",
            "type": "integer"
          },
          "completed_washes": {
            "title": "Completed Washes",
            "type": "integer"
          },
          "last_visit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Visit"
          },
          "loyalty_share": {
            "title": "Loyalty Share",
            "type": "number"
          },
          "loyalty_wash_count": {
            "title": "Loyalty Wash Count",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "points_outstanding": {
            "title": "Points Outstanding",
            "type": "integer"
          },
          "points_redeemed": {
            "title": "Points Redeemed",
            "type": "integer"
          },
          "revenue_cents": {
            "title": "Revenue Cents",
            "type": "integer"
          },
          "total_washes": {
            "title": "Total Washes",
            "type": "integer"
          },
          "user_id": {
            "title": "User Id",
            "type": "integer"
          }
        },
        "required": [
          "user_id",
          "name",
          "total_washes",
          "completed_washes",
          "revenue_cents",
          "avg_spend_cents",
          "last_visit",
          "loyalty_wash_count",
          "loyalty_share",
          "points_redeemed",
          "points_outstanding"
        ],
        "title": "TopCustomerItem",
        "type": "object"
      },
      "TopCustomersResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/TopCustomerItem"
            },
            "title": "Items",
            "type": "array"
          },
          "total": {
            "title": "Total",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "total"
        ],
        "title": "TopCustomersResponse",
        "type": "object"
      },
      "TopRewardItem": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "title",
          "count"
        ],
        "title": "TopRewardItem",
        "type": "object"
      },
      "TransactionDetails": {
        "properties": {
          "average_value": {
            "title": "Average Value",
            "type": "number"
          },
          "conversion_rate": {
            "title": "Conversion Rate",
            "type": "number"
          },
          "peak_days": {
            "items": {
              "$ref": "#/components/schemas/PeakDay"
            },
            "title": "Peak Days",
            "type": "array"
          },
          "peak_hours": {
            "items": {
              "$ref": "#/components/schemas/PeakHour"
            },
            "title": "Peak Hours",
            "type": "array"
          },
          "per_user": {
            "title": "Per User",
            "type": "number"
          }
        },
        "required": [
          "average_value",
          "per_user",
          "conversion_rate",
          "peak_hours",
          "peak_days"
        ],
        "title": "TransactionDetails",
        "type": "object"
      },
      "UserDetails": {
        "properties": {
          "churn_rate": {
            "title": "Churn Rate",
            "type": "number"
          },
          "dau": {
            "title": "Dau",
            "type": "integer"
          },
          "mau": {
            "title": "Mau",
            "type": "integer"
          },
          "retention_rate": {
            "title": "Retention Rate",
            "type": "number"
          },
          "wau": {
            "title": "Wau",
            "type": "integer"
          }
        },
        "required": [
          "dau",
          "wau",
          "mau",
          "retention_rate",
          "churn_rate"
        ],
        "title": "UserDetails",
        "type": "object"
      },
      "UserInfo": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "title": "Phone",
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "phone"
        ],
        "title": "UserInfo",
        "type": "object"
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "format": "email",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "email",
          "phone",
          "role"
        ],
        "title": "UserUpdate",
        "type": "object"
      },
      "UserUpdateRequest": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          }
        },
        "title": "UserUpdateRequest",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      },
      "VehicleCreate": {
        "properties": {
          "make": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Make"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "plate": {
            "title": "Plate",
            "type": "string"
          }
        },
        "required": [
          "plate"
        ],
        "title": "VehicleCreate",
        "type": "object"
      },
      "VehicleIn": {
        "properties": {
          "make": {
            "title": "Make",
            "type": "string"
          },
          "model": {
            "title": "Model",
            "type": "string"
          },
          "plate": {
            "title": "Plate",
            "type": "string"
          }
        },
        "required": [
          "plate",
          "make",
          "model"
        ],
        "title": "VehicleIn",
        "type": "object"
      },
      "VehicleOut": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "make": {
            "title": "Make",
            "type": "string"
          },
          "model": {
            "title": "Model",
            "type": "string"
          },
          "plate": {
            "title": "Plate",
            "type": "string"
          }
        },
        "required": [
          "id",
          "plate",
          "make",
          "model"
        ],
        "title": "VehicleOut",
        "type": "object"
      },
      "VehicleResponse": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "make": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Make"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "plate": {
            "title": "Plate",
            "type": "string"
          }
        },
        "required": [
          "id",
          "plate"
        ],
        "title": "VehicleResponse",
        "type": "object"
      },
      "VerticalType": {
        "description": "Business verticals supported by the unified multi-tenant platform.\n\nNOTE: When adding a new vertical update:\n    - This enum\n    - Any validation lists (e.g. in create/update tenant schemas)\n    - Frontend vertical mapping (TenantConfigProvider)",
        "enum": [
          "carwash",
          "dispensary",
          "padel",
          "flowershop",
          "beauty"
        ],
        "title": "VerticalType",
        "type": "string"
      },
      "YocoChargeRequest": {
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "integer"
          },
          "orderId": {
            "title": "Orderid",
            "type": "integer"
          },
          "token": {
            "title": "Token",
            "type": "string"
          }
        },
        "required": [
          "token",
          "orderId",
          "amount"
        ],
        "title": "YocoChargeRequest",
        "type": "object"
      },
      "app__plugins__auth__routes__UserOut": {
        "properties": {
          "capabilities": {
            "default": [],
            "items": {
              "type": "string"
            },
            "title": "Capabilities",
            "type": "array"
          },
          "email": {
            "format": "email",
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "onboarded": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Onboarded"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "role": {
            "title": "Role",
            "type": "string"
          },
          "tenant_id": {
            "title": "Tenant Id",
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "first_name",
          "last_name",
          "phone",
          "onboarded",
          "tenant_id",
          "role"
        ],
        "title": "UserOut",
        "type": "object"
      },
      "app__plugins__users__routes__UserOut": {
        "properties": {
          "email": {
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "role": {
            "title": "Role",
            "type": "string"
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "email",
          "phone",
          "role"
        ],
        "title": "UserOut",
        "type": "object"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/auth/login"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "info": {
    "title": "SMB Loyalty Program",
    "version": "0.1"
  },
  "openapi": "3.1.0",
  "paths": {
    "/api/admin/audit": {
      "get": {
        "operationId": "audit_recent_api_admin_audit_get",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 50,
              "maximum": 500,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "description": "Pagination: fetch entries with id < before_id",
            "in": "query",
            "name": "before_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pagination: fetch entries with id < before_id",
              "title": "Before Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Audit Recent",
        "tags": [
          "admin"
        ]
      }
    },
    "/api/admin/jobs": {
      "get": {
        "operationId": "jobs_snapshot_api_admin_jobs_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Jobs Snapshot",
        "tags": [
          "admin"
        ]
      }
    },
    "/api/admin/jobs/{job_id}/retry": {
      "post": {
        "operationId": "retry_job_api_admin_jobs__job_id__retry_post",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "title": "Job Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Retry Job",
        "tags": [
          "admin"
        ]
      }
    },
    "/api/admin/metrics": {
      "get": {
        "operationId": "metrics_api_admin_metrics_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Metrics",
        "tags": [
          "admin"
        ]
      }
    },
    "/api/admin/rate-limits": {
      "get": {
        "operationId": "admin_rate_limits_api_admin_rate_limits_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Admin Rate Limits",
        "tags": [
          "admin"
        ]
      },
      "post": {
        "operationId": "upsert_rate_limit_api_admin_rate_limits_post",
        "parameters": [
          {
            "in": "query",
            "name": "scope",
            "required": true,
            "schema": {
              "title": "Scope",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "capacity",
            "required": true,
            "schema": {
              "title": "Capacity",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "per_seconds",
            "required": true,
            "schema": {
              "title": "Per Seconds",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Upsert Rate Limit",
        "tags": [
          "admin"
        ]
      }
    },
    "/api/admin/rate-limits/{scope}": {
      "delete": {
        "operationId": "remove_rate_limit_api_admin_rate_limits__scope__delete",
        "parameters": [
          {
            "in": "path",
            "name": "scope",
            "required": true,
            "schema": {
              "title": "Scope",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Remove Rate Limit",
        "tags": [
          "admin"
        ]
      }
    },
    "/api/admin/transactions": {
      "get": {
        "operationId": "list_transactions_api_admin_transactions_get",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "minimum": 1,
              "title": "Page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 25,
              "maximum": 100,
              "minimum": 1,
              "title": "Page Size",
              "type": "integer"
            }
          },
          {
            "description": "Filter by payment status (comma separated)",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by payment status (comma separated)",
              "title": "Status"
            }
          },
          {
            "description": "Filter by payment method",
            "in": "query",
            "name": "method",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by payment method",
              "title": "Method"
            }
          },
          {
            "description": "Filter by payment source",
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by payment source",
              "title": "Source"
            }
          },
          {
            "description": "Search reference, transaction id, email, phone, or order id",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search reference, transaction id, email, phone, or order id",
              "title": "Search"
            }
          },
          {
            "description": "Filter payments created on/after this ISO date",
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter payments created on/after this ISO date",
              "title": "Start Date"
            }
          },
          {
            "description": "Filter payments created on/before this ISO date",
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter payments created on/before this ISO date",
              "title": "End Date"
            }
          },
          {
            "description": "Minimum payment amount in cents",
            "in": "query",
            "name": "min_amount",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Minimum payment amount in cents",
              "title": "Min Amount"
            }
          },
          {
            "description": "Maximum payment amount in cents",
            "in": "query",
            "name": "max_amount",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Maximum payment amount in cents",
              "title": "Max Amount"
            }
          },
          {
            "description": "Filter by numeric order id",
            "in": "query",
            "name": "order_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by numeric order id",
              "title": "Order Id"
            }
          },
          {
            "description": "Sort field: created_at, amount, status, order_created_at",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "description": "Sort field: created_at, amount, status, order_created_at",
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "description": "Sort order: asc or desc",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "default": "desc",
              "description": "Sort order: asc or desc",
              "title": "Sort Order",
              "type": "string"
            }
          },
          {
            "description": "Tenant scope override (superadmin only)",
            "in": "query",
            "name": "tenant_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tenant scope override (superadmin only)",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List Transactions",
        "tags": [
          "admin"
        ]
      }
    },
    "/api/analytics/customers/refresh": {
      "post": {
        "operationId": "refresh_customers_api_analytics_customers_refresh_post",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Trigger refresh of aggregated customer metrics",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/analytics/customers/top": {
      "get": {
        "operationId": "get_top_customers_api_analytics_customers_top_get",
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "maximum": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "default": "revenue",
              "pattern": "^(revenue|washes|loyalty_share)$",
              "title": "Sort",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopCustomersResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Top customers by revenue/visits within range",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/analytics/engagement/details": {
      "get": {
        "operationId": "get_engagement_details_api_analytics_engagement_details_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get engagement metrics like banner clicks and feature usage",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/analytics/financial/details": {
      "get": {
        "operationId": "get_financial_details_api_analytics_financial_details_get",
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get financial KPIs like revenue, ARPU, and LTV",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/analytics/insights": {
      "get": {
        "operationId": "get_insights_api_analytics_insights_get",
        "parameters": [
          {
            "description": "Start date (YYYY-MM-DD)",
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date (YYYY-MM-DD)",
              "title": "Start Date"
            }
          },
          {
            "description": "End date (YYYY-MM-DD)",
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date (YYYY-MM-DD)",
              "title": "End Date"
            }
          },
          {
            "description": "User role filter",
            "in": "query",
            "name": "tier",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User role filter",
              "title": "Tier"
            }
          },
          {
            "description": "Payment source filter",
            "in": "query",
            "name": "campaign",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Payment source filter",
              "title": "Campaign"
            }
          },
          {
            "description": "Device type filter",
            "in": "query",
            "name": "device",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Device type filter",
              "title": "Device"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Get Insights Api Analytics Insights Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "AI-generated insights comparing current vs prior period",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/analytics/loyalty/details": {
      "get": {
        "operationId": "get_loyalty_details_api_analytics_loyalty_details_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get loyalty tier metrics like progression rates and avg time in tier",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/analytics/loyalty/overview": {
      "get": {
        "operationId": "get_loyalty_overview_api_analytics_loyalty_overview_get",
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyAnalyticsResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Loyalty penetration & churn candidates",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/analytics/points/details": {
      "get": {
        "operationId": "get_points_details_api_analytics_points_details_get",
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "description": "User role filter",
            "in": "query",
            "name": "tier",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User role filter",
              "title": "Tier"
            }
          },
          {
            "description": "Payment source filter (not applied)",
            "in": "query",
            "name": "campaign",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Payment source filter (not applied)",
              "title": "Campaign"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get points metrics including issued/redeemed over time and redemption rate",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/analytics/redemptions/details": {
      "get": {
        "operationId": "get_redemptions_details_api_analytics_redemptions_details_get",
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "description": "User role filter",
            "in": "query",
            "name": "tier",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User role filter",
              "title": "Tier"
            }
          },
          {
            "description": "Payment source filter (not applied)",
            "in": "query",
            "name": "campaign",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Payment source filter (not applied)",
              "title": "Campaign"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get redemption metrics such as total redemptions, avg cost, and reward conversion",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/analytics/summary": {
      "get": {
        "operationId": "get_summary_api_analytics_summary_get",
        "parameters": [
          {
            "description": "Start date (YYYY-MM-DD)",
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date (YYYY-MM-DD)",
              "title": "Start Date"
            }
          },
          {
            "description": "End date (YYYY-MM-DD)",
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date (YYYY-MM-DD)",
              "title": "End Date"
            }
          },
          {
            "description": "User role for segmentation",
            "in": "query",
            "name": "tier",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User role for segmentation",
              "title": "Tier"
            }
          },
          {
            "description": "Payment source filter",
            "in": "query",
            "name": "campaign",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Payment source filter",
              "title": "Campaign"
            }
          },
          {
            "description": "Device type filter (not implemented)",
            "in": "query",
            "name": "device",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Device type filter (not implemented)",
              "title": "Device"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsSummaryResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get summary statistics for the dashboard",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/analytics/top-clients": {
      "get": {
        "operationId": "get_top_clients_api_analytics_top_clients_get",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 5,
              "maximum": 50,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "description": "Start date (YYYY-MM-DD)",
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date (YYYY-MM-DD)",
              "title": "Start Date"
            }
          },
          {
            "description": "End date (YYYY-MM-DD)",
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date (YYYY-MM-DD)",
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get top clients by count, value, points, and visits",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/analytics/transactions/details": {
      "get": {
        "operationId": "get_transaction_details_api_analytics_transactions_details_get",
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "description": "User role filter",
            "in": "query",
            "name": "tier",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User role filter",
              "title": "Tier"
            }
          },
          {
            "description": "Payment source filter",
            "in": "query",
            "name": "campaign",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Payment source filter",
              "title": "Campaign"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDetails"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get transaction metrics like average value, per-user rate, conversion, and peak times",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/analytics/users/details": {
      "get": {
        "operationId": "get_user_details_api_analytics_users_details_get",
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "description": "User role filter",
            "in": "query",
            "name": "tier",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "User role filter",
              "title": "Tier"
            }
          },
          {
            "description": "Payment source filter",
            "in": "query",
            "name": "campaign",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Payment source filter",
              "title": "Campaign"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get detailed user metrics such as DAU, WAU, MAU, retention, and churn",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/analytics/visits/details": {
      "get": {
        "operationId": "get_visits_details_api_analytics_visits_details_get",
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get visit metrics like total visits per user and peak visit times",
        "tags": [
          "analytics"
        ]
      }
    },
    "/api/auth/complete-invite": {
      "post": {
        "operationId": "complete_invite_api_auth_complete_invite_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteInviteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Complete Invite",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/confirm-otp": {
      "post": {
        "operationId": "confirm_otp_api_auth_confirm_otp_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmOtpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Confirm Otp",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "login_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_api_auth_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Login",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/me": {
      "get": {
        "operationId": "me_api_auth_me_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__plugins__auth__routes__UserOut"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Me",
        "tags": [
          "auth"
        ]
      },
      "put": {
        "operationId": "update_me_api_auth_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__plugins__auth__routes__UserOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Update Me",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/payments/verify/{ref}": {
      "get": {
        "operationId": "verify_payment_ref_api_auth_payments_verify__ref__get",
        "parameters": [
          {
            "in": "path",
            "name": "ref",
            "required": true,
            "schema": {
              "title": "Ref",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Verify Payment Ref",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/register-staff": {
      "post": {
        "operationId": "register_staff_api_auth_register_staff_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffRegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Register Staff",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/request-password-reset": {
      "post": {
        "operationId": "request_password_reset_api_auth_request_password_reset_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetEmailRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Request Password Reset",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "operationId": "reset_password_api_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Reset Password",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/reset-password-confirm": {
      "post": {
        "operationId": "reset_password_confirm_api_auth_reset_password_confirm_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Reset Password Confirm",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/signup": {
      "post": {
        "operationId": "signup_api_auth_signup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Signup",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/social-login": {
      "post": {
        "operationId": "social_login_api_auth_social_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Social Login",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/users/{user_id}/role": {
      "patch": {
        "operationId": "update_user_role_api_auth_users__user_id__role_patch",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "new_role",
            "required": true,
            "schema": {
              "title": "New Role",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Update User Role",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/validate-invite": {
      "get": {
        "operationId": "validate_invite_api_auth_validate_invite_get",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "title": "Token",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteValidationOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Validate Invite",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/billing/cancel-subscription": {
      "post": {
        "description": "Cancel the tenant's active subscription.",
        "operationId": "cancel_subscription_api_billing_cancel_subscription_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Cancel Subscription",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/cancel-trial": {
      "post": {
        "operationId": "cancel_trial_api_billing_cancel_trial_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Cancel Trial",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/invoices": {
      "get": {
        "operationId": "get_invoices_api_billing_invoices_get",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Invoices",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/modules": {
      "get": {
        "operationId": "list_modules_api_billing_modules_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List Modules",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/pause": {
      "post": {
        "operationId": "pause_subscription_api_billing_pause_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Pause Subscription",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/payment-methods": {
      "get": {
        "operationId": "get_payment_methods_api_billing_payment_methods_get",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Payment Methods",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/plans": {
      "get": {
        "operationId": "list_plans_api_billing_plans_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlanOut"
                  },
                  "title": "Response List Plans Api Billing Plans Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List Plans",
        "tags": [
          "subscriptions"
        ]
      },
      "post": {
        "operationId": "create_plan_api_billing_plans_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Create Plan",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/plans/all": {
      "get": {
        "description": "List all plans including archived.",
        "operationId": "list_all_plans_api_billing_plans_all_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlanOut"
                  },
                  "title": "Response List All Plans Api Billing Plans All Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List All Plans",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/plans/{plan_id}": {
      "put": {
        "operationId": "update_plan_api_billing_plans__plan_id__put",
        "parameters": [
          {
            "in": "path",
            "name": "plan_id",
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Update Plan",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/plans/{plan_id}/archive": {
      "post": {
        "operationId": "archive_plan_api_billing_plans__plan_id__archive_post",
        "parameters": [
          {
            "in": "path",
            "name": "plan_id",
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Archive Plan",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/plans/{plan_id}/restore": {
      "post": {
        "operationId": "restore_plan_api_billing_plans__plan_id__restore_post",
        "parameters": [
          {
            "in": "path",
            "name": "plan_id",
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Restore Plan",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/portal": {
      "post": {
        "operationId": "open_portal_api_billing_portal_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Open Portal",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/profile": {
      "get": {
        "operationId": "get_billing_profile_api_billing_profile_get",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Billing Profile",
        "tags": [
          "subscriptions"
        ]
      },
      "put": {
        "operationId": "put_billing_profile_api_billing_profile_put",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Put Billing Profile",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/resume": {
      "post": {
        "operationId": "resume_subscription_api_billing_resume_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Resume Subscription",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/setup-subscription": {
      "post": {
        "description": "Set up a real subscription with Yoco for recurring billing.",
        "operationId": "setup_subscription_api_billing_setup_subscription_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionSetup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Setup Subscription",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/start-trial": {
      "post": {
        "operationId": "start_trial_api_billing_start_trial_post",
        "parameters": [
          {
            "in": "query",
            "name": "days",
            "required": false,
            "schema": {
              "default": 14,
              "title": "Days",
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Start Trial",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/subscription-status": {
      "get": {
        "description": "Get detailed subscription status including billing info.",
        "operationId": "get_subscription_status_api_billing_subscription_status_get",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Subscription Status",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/tenants/{tenant_id}": {
      "get": {
        "operationId": "get_tenant_subscription_api_billing_tenants__tenant_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Tenant Subscription",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/tenants/{tenant_id}/assign-plan": {
      "post": {
        "operationId": "assign_plan_api_billing_tenants__tenant_id__assign_plan_post",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantAssignPlan"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Assign Plan",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/tenants/{tenant_id}/history": {
      "get": {
        "operationId": "get_history_api_billing_tenants__tenant_id__history_get",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get History",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/tenants/{tenant_id}/override": {
      "post": {
        "operationId": "set_override_api_billing_tenants__tenant_id__override_post",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverridePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Set Override",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/tenants/{tenant_id}/overrides": {
      "get": {
        "operationId": "get_overrides_api_billing_tenants__tenant_id__overrides_get",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Overrides",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/usage": {
      "get": {
        "description": "Compute module usage from real data.\n\n- core: number of orders created in window\n- loyalty: number of redemptions created/redeemed in window\n- billing: number of successful payments in window\n- analytics: number of distinct active users in window (via orders)\n- inventory: placeholder (0) unless you later add inventory events",
        "operationId": "get_usage_api_billing_usage_get",
        "parameters": [
          {
            "in": "query",
            "name": "window",
            "required": false,
            "schema": {
              "default": "30d",
              "title": "Window",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Usage",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/billing/webhook/yoco-subscription": {
      "post": {
        "description": "Handle Yoco subscription webhooks.",
        "operationId": "yoco_subscription_webhook_api_billing_webhook_yoco_subscription_post",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Yoco Subscription Webhook",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/catalog/extras": {
      "get": {
        "operationId": "list_extras_api_catalog_extras_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "List Extras",
        "tags": [
          "catalog"
        ]
      }
    },
    "/api/catalog/services": {
      "get": {
        "operationId": "list_services_api_catalog_services_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "List Services",
        "tags": [
          "catalog"
        ]
      }
    },
    "/api/customers": {
      "get": {
        "description": "Return paginated customer records with aggregate metrics.",
        "operationId": "list_customers_api_customers_get",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "minimum": 1,
              "title": "Page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "maximum": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "description": "Search by name, email, or phone",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by name, email, or phone",
              "title": "Search"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "default": "desc",
              "pattern": "^(asc|desc)$",
              "title": "Sort Order",
              "type": "string"
            }
          },
          {
            "description": "Filter by role (user/staff/admin)",
            "in": "query",
            "name": "role",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by role (user/staff/admin)",
              "title": "Role"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerListResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List Customers"
      }
    },
    "/api/customers/": {
      "get": {
        "description": "Return paginated customer records with aggregate metrics.",
        "operationId": "list_customers_api_customers__get",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "minimum": 1,
              "title": "Page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "maximum": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "description": "Search by name, email, or phone",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by name, email, or phone",
              "title": "Search"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "created_at",
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "default": "desc",
              "pattern": "^(asc|desc)$",
              "title": "Sort Order",
              "type": "string"
            }
          },
          {
            "description": "Filter by role (user/staff/admin)",
            "in": "query",
            "name": "role",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by role (user/staff/admin)",
              "title": "Role"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerListResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List Customers"
      }
    },
    "/api/customers/{customer_id}": {
      "get": {
        "description": "Return a single customer's profile, loyalty, and recent activity.",
        "operationId": "get_customer_api_customers__customer_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "title": "Customer Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDetailResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Customer"
      },
      "patch": {
        "description": "Update customer profile fields (admin/staff only).",
        "operationId": "update_customer_api_customers__customer_id__patch",
        "parameters": [
          {
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "title": "Customer Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDetailResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Update Customer"
      }
    },
    "/api/customers/{customer_id}/orders": {
      "get": {
        "description": "Return paginated orders for a single customer.",
        "operationId": "get_customer_orders_api_customers__customer_id__orders_get",
        "parameters": [
          {
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "title": "Customer Id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "maximum": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Customer Orders"
      }
    },
    "/api/debug/seed-default-tenant": {
      "get": {
        "description": "Emergency endpoint to seed default tenant. Remove after fix.",
        "operationId": "debug_seed_default_tenant_api_debug_seed_default_tenant_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Debug Seed Default Tenant"
      }
    },
    "/api/dev/": {
      "get": {
        "description": "Basic status + tenant list.",
        "operationId": "dev_status_api_dev__get",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "title": "Response Dev Status Api Dev  Get",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Dev Status",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/audit": {
      "get": {
        "operationId": "recent_audit_api_dev_audit_get",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 50,
              "maximum": 200,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Recent Audit",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/jobs": {
      "get": {
        "operationId": "list_jobs_api_dev_jobs_get",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "List Jobs",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/jobs/dead-letter/purge": {
      "delete": {
        "operationId": "purge_dead_letter_api_dev_jobs_dead_letter_purge_delete",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Purge Dead Letter",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/jobs/dead-letter/{job_id}/requeue": {
      "post": {
        "operationId": "requeue_dead_letter_api_dev_jobs_dead_letter__job_id__requeue_post",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "title": "Job Id",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Requeue Dead Letter",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/jobs/enqueue": {
      "post": {
        "operationId": "enqueue_job_api_dev_jobs_enqueue_post",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnqueueRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Enqueue Job",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/jobs/run-next": {
      "post": {
        "operationId": "run_next_api_dev_jobs_run_next_post",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Run Next",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/jobs/tick": {
      "post": {
        "operationId": "jobs_tick_api_dev_jobs_tick_post",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Jobs Tick",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/jobs/{job_id}/run": {
      "post": {
        "operationId": "run_job_api_dev_jobs__job_id__run_post",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "title": "Job Id",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Run Job",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/rate-limits/bans": {
      "get": {
        "operationId": "list_bans_api_dev_rate_limits_bans_get",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "List Bans",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/rate-limits/bans/{ip}": {
      "delete": {
        "operationId": "clear_ban_api_dev_rate_limits_bans__ip__delete",
        "parameters": [
          {
            "in": "path",
            "name": "ip",
            "required": true,
            "schema": {
              "title": "Ip",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Clear Ban",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/rate-limits/config": {
      "get": {
        "operationId": "current_rate_limits_api_dev_rate_limits_config_get",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Current Rate Limits",
        "tags": [
          "dev"
        ]
      },
      "post": {
        "operationId": "override_rate_limit_api_dev_rate_limits_config_post",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RateLimitOverride"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Override Rate Limit",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/rate-limits/config/{scope}": {
      "delete": {
        "operationId": "delete_override_api_dev_rate_limits_config__scope__delete",
        "parameters": [
          {
            "in": "path",
            "name": "scope",
            "required": true,
            "schema": {
              "title": "Scope",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Delete Override",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/reset-db": {
      "post": {
        "description": "Dangerous: rebuild all tables. Guarded by flags + explicit confirmation.",
        "operationId": "reset_db_api_dev_reset_db_post",
        "parameters": [
          {
            "description": "Must be true to allow reset",
            "in": "query",
            "name": "confirm",
            "required": false,
            "schema": {
              "default": false,
              "description": "Must be true to allow reset",
              "title": "Confirm",
              "type": "boolean"
            }
          },
          {
            "in": "header",
            "name": "X-Dev-Confirm",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Dev-Confirm"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Reset Db",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/dev/rl-test": {
      "get": {
        "operationId": "dev_rate_limited_probe_api_dev_rl_test_get",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Dev Rate Limited Probe",
        "tags": [
          "dev"
        ]
      }
    },
    "/api/loyalty/me": {
      "get": {
        "operationId": "loyalty_me_api_loyalty_me_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get loyalty status and unlocked/upcoming rewards for current user",
        "tags": [
          "loyalty"
        ]
      }
    },
    "/api/loyalty/redeem": {
      "post": {
        "operationId": "redeem_api_loyalty_redeem_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Redeem a reward token",
        "tags": [
          "loyalty"
        ]
      }
    },
    "/api/loyalty/register": {
      "post": {
        "operationId": "register_user_api_loyalty_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Register or re-issue token for a user",
        "tags": [
          "loyalty"
        ]
      }
    },
    "/api/loyalty/reward": {
      "post": {
        "operationId": "claim_reward_api_loyalty_reward_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Issue QR-coded JWTs for new rewards",
        "tags": [
          "loyalty"
        ]
      }
    },
    "/api/loyalty/rewards": {
      "get": {
        "operationId": "list_rewards_api_loyalty_rewards_get",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 50,
              "maximum": 200,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          },
          {
            "in": "header",
            "name": "X-Bypass-Tenant-Cache",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Bypass-Tenant-Cache"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List rewards for current tenant",
        "tags": [
          "loyalty"
        ]
      }
    },
    "/api/loyalty/visit": {
      "post": {
        "operationId": "log_visit_api_loyalty_visit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Log a visit for a given phone number",
        "tags": [
          "loyalty"
        ]
      }
    },
    "/api/notifications/admin": {
      "get": {
        "description": "Backward-compatible alias returning all notifications for the tenant.",
        "operationId": "get_admin_notifications_api_notifications_admin_get",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 500,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "notification_type",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Notification Type"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Admin Notifications"
      }
    },
    "/api/notifications/admin/all": {
      "get": {
        "description": "Get all notifications for the tenant (admin only)",
        "operationId": "get_all_notifications_api_notifications_admin_all_get",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 500,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "notification_type",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Notification Type"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get All Notifications"
      }
    },
    "/api/notifications/admin/stats": {
      "get": {
        "description": "Get notification statistics (admin only)",
        "operationId": "get_notification_stats_api_notifications_admin_stats_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Notification Stats"
      }
    },
    "/api/notifications/admin/{notification_id}": {
      "delete": {
        "description": "Allow admins to delete any tenant notification (legacy route).",
        "operationId": "admin_delete_notification_api_notifications_admin__notification_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "notification_id",
            "required": true,
            "schema": {
              "title": "Notification Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Admin Delete Notification"
      }
    },
    "/api/notifications/my": {
      "get": {
        "description": "Get current user's notifications",
        "operationId": "get_my_notifications_api_notifications_my_get",
        "parameters": [
          {
            "in": "query",
            "name": "unread_only",
            "required": false,
            "schema": {
              "default": false,
              "title": "Unread Only",
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 50,
              "maximum": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NotificationResponse"
                  },
                  "title": "Response Get My Notifications Api Notifications My Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get My Notifications"
      }
    },
    "/api/notifications/read-all": {
      "post": {
        "description": "Mark all user's notifications as read",
        "operationId": "mark_all_notifications_read_api_notifications_read_all_post",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Mark All Notifications Read"
      }
    },
    "/api/notifications/send": {
      "post": {
        "description": "Create and send a notification to users",
        "operationId": "create_notification_api_notifications_send_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Create Notification"
      }
    },
    "/api/notifications/unread-count": {
      "get": {
        "description": "Get count of unread notifications",
        "operationId": "get_unread_count_api_notifications_unread_count_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Unread Count"
      }
    },
    "/api/notifications/{notification_id}": {
      "delete": {
        "description": "Delete a notification",
        "operationId": "delete_notification_api_notifications__notification_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "notification_id",
            "required": true,
            "schema": {
              "title": "Notification Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Delete Notification"
      }
    },
    "/api/notifications/{notification_id}/read": {
      "post": {
        "description": "Mark a notification as read",
        "operationId": "mark_notification_read_api_notifications__notification_id__read_post",
        "parameters": [
          {
            "in": "path",
            "name": "notification_id",
            "required": true,
            "schema": {
              "title": "Notification Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Mark Notification Read"
      }
    },
    "/api/onboarding/complete-step": {
      "post": {
        "description": "Complete an onboarding step.",
        "operationId": "complete_onboarding_step_api_onboarding_complete_step_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteStepRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "title": "Response Complete Onboarding Step Api Onboarding Complete Step Post",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Complete Onboarding Step",
        "tags": [
          "onboarding"
        ]
      }
    },
    "/api/onboarding/create-business": {
      "post": {
        "description": "Create a new business tenant and start onboarding.",
        "operationId": "create_business_api_onboarding_create_business_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBusinessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "title": "Response Create Business Api Onboarding Create Business Post",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Create Business",
        "tags": [
          "onboarding"
        ]
      }
    },
    "/api/onboarding/status": {
      "get": {
        "description": "Get onboarding status for the current tenant.",
        "operationId": "get_onboarding_status_api_onboarding_status_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "title": "Response Get Onboarding Status Api Onboarding Status Get",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Onboarding Status",
        "tags": [
          "onboarding"
        ]
      }
    },
    "/api/ops/status": {
      "get": {
        "operationId": "ops_status_api_ops_status_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Ops Status",
        "tags": [
          "ops"
        ]
      }
    },
    "/api/orders": {
      "get": {
        "operationId": "list_orders_api_orders_get",
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrderResponse"
                  },
                  "title": "Response List Orders Api Orders Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List all orders, optional status filter",
        "tags": [
          "orders"
        ]
      },
      "post": {
        "operationId": "create_order_legacy_api_orders_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "title": "Payload",
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Legacy order creation endpoint (deprecated)",
        "tags": [
          "orders"
        ]
      }
    },
    "/api/orders/create": {
      "post": {
        "description": "Create an order.\n\nImprovements:\n- Validate service exists (otherwise FK violation produced a 500 before)\n- Validate extras up-front with clear 400s\n- Retry payment pin generation on race-condition unique collisions\n- Return clearer 500 only for unexpected errors",
        "operationId": "create_order_api_orders_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCreateResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Create a new order with optional default vehicle assignment",
        "tags": [
          "orders"
        ]
      }
    },
    "/api/orders/my-past-orders": {
      "get": {
        "operationId": "my_past_orders_api_orders_my_past_orders_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get user's past paid orders with amount and extras details",
        "tags": [
          "orders"
        ]
      }
    },
    "/api/orders/{order_id}": {
      "get": {
        "operationId": "get_order_api_orders__order_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetailResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get detailed order info with loyalty and next steps",
        "tags": [
          "orders"
        ]
      }
    },
    "/api/orders/{order_id}/assign-vehicle": {
      "post": {
        "operationId": "assign_vehicle_api_orders__order_id__assign_vehicle_post",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignVehicleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetailResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Assign a vehicle to an order and get updated details",
        "tags": [
          "orders"
        ]
      }
    },
    "/api/orders/{order_id}/complete-wash": {
      "post": {
        "operationId": "complete_wash_api_orders__order_id__complete_wash_post",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetailResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Complete wash for an order, update visit counts, and return updated details",
        "tags": [
          "orders"
        ]
      }
    },
    "/api/orders/{order_id}/redeem": {
      "post": {
        "description": "Mark order as redeemed and return updated order details",
        "operationId": "redeem_order_api_orders__order_id__redeem_post",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetailResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Mark order as redeemed and return updated details",
        "tags": [
          "orders"
        ]
      }
    },
    "/api/orders/{order_id}/start-wash": {
      "post": {
        "operationId": "start_wash_api_orders__order_id__start_wash_post",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetailResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Start wash for an order and return updated details",
        "tags": [
          "orders"
        ]
      }
    },
    "/api/payments/active-washes": {
      "get": {
        "operationId": "active_washes_api_payments_active_washes_get",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Active Washes",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/business-analytics": {
      "get": {
        "description": "Public analytics endpoint (no auth required).\n\nOriginally this endpoint inherited the router-level auth dependency which broke\nlightweight test access (tests call it without a token). Making it public is\nacceptable because it only returns aggregated, non-sensitive operational\nmetrics. If future sensitive fields are added, wrap them behind an auth check.",
        "operationId": "business_analytics_api_payments_business_analytics_get",
        "parameters": [
          {
            "description": "Lookback window for trend metrics",
            "in": "query",
            "name": "range_days",
            "required": false,
            "schema": {
              "default": 30,
              "description": "Lookback window for trend metrics",
              "maximum": 90,
              "minimum": 1,
              "title": "Range Days",
              "type": "integer"
            }
          },
          {
            "description": "Short window for deltas (e.g. last 7 days)",
            "in": "query",
            "name": "recent_days",
            "required": false,
            "schema": {
              "default": 7,
              "description": "Short window for deltas (e.g. last 7 days)",
              "maximum": 30,
              "minimum": 1,
              "title": "Recent Days",
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Phase 1 & 2 business metrics for staff dashboard",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/charge": {
      "post": {
        "operationId": "charge_yoco_api_payments_charge_post",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/YocoChargeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Charge Yoco",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/dashboard-analytics": {
      "get": {
        "description": "Basic analytics for staff dashboard without admin restrictions.\n\nOptimizations (Phase 5):\n- Single consolidated stats query using conditional aggregation (reduces round trips).\n- In\u2011process TTL cache to avoid recomputing identical range repeatedly within 30s.\n- Lightweight timing instrumentation for observability (returned inside payload under meta.elapsed_ms).",
        "operationId": "dashboard_analytics_api_payments_dashboard_analytics_get",
        "parameters": [
          {
            "description": "Start date YYYY-MM-DD",
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date YYYY-MM-DD",
              "title": "Start Date"
            }
          },
          {
            "description": "End date YYYY-MM-DD",
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date YYYY-MM-DD",
              "title": "End Date"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Dashboard Analytics",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/dashboard-analytics/meta": {
      "get": {
        "operationId": "dashboard_analytics_meta_api_payments_dashboard_analytics_meta_get",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Dashboard Analytics Meta",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/end-wash/{order_id}": {
      "post": {
        "description": "End a wash (shared lifecycle logic).",
        "operationId": "end_wash_api_payments_end_wash__order_id__post",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "End Wash",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/history": {
      "get": {
        "description": "Return wash/order history between optional dates with lightweight filtering.\n\nNotes:\n- Falls back to today's date range if none supplied.\n- Status is derived from presence of ended_at.\n- paymentType 'loyalty' filters orders that have a zero-amount successful loyalty Payment OR amount==0.\n- Pagination is naive (offset/limit) for now.",
        "operationId": "history_api_payments_history_get",
        "parameters": [
          {
            "description": "Start date YYYY-MM-DD (defaults to today if none provided)",
            "in": "query",
            "name": "start_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date YYYY-MM-DD (defaults to today if none provided)",
              "title": "Start Date"
            }
          },
          {
            "description": "End date YYYY-MM-DD (inclusive)",
            "in": "query",
            "name": "end_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date YYYY-MM-DD (inclusive)",
              "title": "End Date"
            }
          },
          {
            "description": "Filter by status: started|ended",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status: started|ended",
              "title": "Status"
            }
          },
          {
            "description": "Filter by payment type: paid|loyalty (maps to Payment heuristics)",
            "in": "query",
            "name": "paymentType",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by payment type: paid|loyalty (maps to Payment heuristics)",
              "title": "Paymenttype"
            }
          },
          {
            "description": "Substring match on service name / category (first item)",
            "in": "query",
            "name": "service_type",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Substring match on service name / category (first item)",
              "title": "Service Type"
            }
          },
          {
            "description": "Substring match on user first/last name or phone",
            "in": "query",
            "name": "customer",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Substring match on user first/last name or phone",
              "title": "Customer"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "minimum": 1,
              "title": "Page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "maximum": 500,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "History",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/order-user/{order_id}": {
      "get": {
        "operationId": "get_order_user_api_payments_order_user__order_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Order User",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/qr/{order_id}": {
      "get": {
        "operationId": "get_payment_qr_api_payments_qr__order_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Payment Qr",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/recent-verifications": {
      "get": {
        "description": "Return recent verified payments (orders with order_redeemed_at set).\n\nProvides lightweight info for staff sidebar/history. Includes whether\na wash has been started or completed to allow contextual navigation.",
        "operationId": "recent_verifications_api_payments_recent_verifications_get",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 50,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Recent Verifications",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/start-manual-wash": {
      "post": {
        "operationId": "start_manual_wash_api_payments_start_manual_wash_post",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "title": "Data",
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Start Manual Wash",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/start-wash/{order_id}": {
      "post": {
        "description": "Start a wash (shared lifecycle logic).",
        "operationId": "start_wash_api_payments_start_wash__order_id__post",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "title": "Data",
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Start Wash",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/user-wash-status": {
      "get": {
        "operationId": "user_wash_status_api_payments_user_wash_status_get",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "User Wash Status",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/verify-loyalty": {
      "get": {
        "operationId": "verify_loyalty_api_payments_verify_loyalty_get",
        "parameters": [
          {
            "description": "Loyalty PIN",
            "in": "query",
            "name": "pin",
            "required": false,
            "schema": {
              "description": "Loyalty PIN",
              "title": "Pin",
              "type": "string"
            }
          },
          {
            "description": "Loyalty QR code or JWT",
            "in": "query",
            "name": "qr",
            "required": false,
            "schema": {
              "description": "Loyalty QR code or JWT",
              "title": "Qr",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Verify Loyalty",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/verify-payment": {
      "get": {
        "description": "Verify a payment via one of: PIN, QR reference, or explicit reference.\n\nEnhancements:\n- Added `ref` alias to support legacy frontend usage (?ref=...)\n- Enriched response with user, vehicle, amount, method, service & extras\n- Returns consistent payload even for already redeemed orders",
        "operationId": "verify_payment_api_payments_verify_payment_get",
        "parameters": [
          {
            "description": "Payment PIN",
            "in": "query",
            "name": "pin",
            "required": false,
            "schema": {
              "description": "Payment PIN",
              "title": "Pin",
              "type": "string"
            }
          },
          {
            "description": "Payment QR code",
            "in": "query",
            "name": "qr",
            "required": false,
            "schema": {
              "description": "Payment QR code",
              "title": "Qr",
              "type": "string"
            }
          },
          {
            "description": "Payment reference or transaction id (alias)",
            "in": "query",
            "name": "ref",
            "required": false,
            "schema": {
              "description": "Payment reference or transaction id (alias)",
              "title": "Ref",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Verify Payment",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/verify-pos": {
      "get": {
        "operationId": "verify_pos_api_payments_verify_pos_get",
        "parameters": [
          {
            "description": "POS receipt number",
            "in": "query",
            "name": "receipt",
            "required": true,
            "schema": {
              "description": "POS receipt number",
              "title": "Receipt",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Verify Pos",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/wash-history": {
      "get": {
        "operationId": "wash_history_api_payments_wash_history_get",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "title": "Date",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Wash History",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/payments/webhook/yoco": {
      "post": {
        "operationId": "yoco_webhook_api_payments_webhook_yoco_post",
        "parameters": [
          {
            "in": "header",
            "name": "Yoco-Signature",
            "required": false,
            "schema": {
              "title": "Yoco-Signature",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Yoco Webhook",
        "tags": [
          "payments"
        ]
      }
    },
    "/api/profile/me": {
      "get": {
        "description": "Get current user profile details",
        "operationId": "get_my_profile_api_profile_me_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get My Profile"
      },
      "put": {
        "description": "Update current user profile",
        "operationId": "update_my_profile_api_profile_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Update My Profile"
      }
    },
    "/api/profile/me/loyalty-summary": {
      "get": {
        "description": "Get detailed loyalty program summary for current user",
        "operationId": "get_my_loyalty_summary_api_profile_me_loyalty_summary_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get My Loyalty Summary"
      }
    },
    "/api/profile/me/orders": {
      "get": {
        "description": "Get current user's order history",
        "operationId": "get_my_orders_api_profile_me_orders_get",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "maximum": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get My Orders"
      }
    },
    "/api/profile/me/redemptions": {
      "get": {
        "description": "Get current user's reward redemption history",
        "operationId": "get_my_redemptions_api_profile_me_redemptions_get",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "maximum": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get My Redemptions"
      }
    },
    "/api/profile/me/vehicles": {
      "get": {
        "description": "Get current user's vehicles",
        "operationId": "get_my_vehicles_api_profile_me_vehicles_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/VehicleResponse"
                  },
                  "title": "Response Get My Vehicles Api Profile Me Vehicles Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get My Vehicles"
      },
      "post": {
        "description": "Add a new vehicle for current user",
        "operationId": "create_vehicle_api_profile_me_vehicles_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Create Vehicle"
      }
    },
    "/api/profile/me/vehicles/{vehicle_id}": {
      "delete": {
        "description": "Delete a specific vehicle",
        "operationId": "delete_vehicle_api_profile_me_vehicles__vehicle_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "vehicle_id",
            "required": true,
            "schema": {
              "title": "Vehicle Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Delete Vehicle"
      },
      "put": {
        "description": "Update a specific vehicle",
        "operationId": "update_vehicle_api_profile_me_vehicles__vehicle_id__put",
        "parameters": [
          {
            "in": "path",
            "name": "vehicle_id",
            "required": true,
            "schema": {
              "title": "Vehicle Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Update Vehicle"
      }
    },
    "/api/public/tenant-manifest": {
      "get": {
        "description": "Return a lightweight web manifest for the active tenant.",
        "operationId": "public_tenant_manifest_api_public_tenant_manifest_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Public Tenant Manifest"
      }
    },
    "/api/public/tenant-meta": {
      "get": {
        "description": "Public discovery endpoint for frontend.\n\nReturns lightweight tenant metadata (vertical, features, branding) resolved\nfrom Host header or X-Tenant-ID. Includes ETag + 60s public cache and a\nsimple IP-based rate limit (capacity/window via settings).",
        "operationId": "public_tenant_meta_api_public_tenant_meta_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Public Tenant Meta"
      }
    },
    "/api/public/tenant-theme": {
      "get": {
        "description": "Lightweight branding/theme info for white-label bootstrap.\n\nReturns minimal fields required to paint initial shell (colors + logos).\nCached similarly to /api/public/tenant-meta.",
        "operationId": "public_tenant_theme_api_public_tenant_theme_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Public Tenant Theme"
      }
    },
    "/api/reports/business-summary": {
      "get": {
        "description": "Return consolidated business metrics for admin dashboards.",
        "operationId": "get_business_summary_api_reports_business_summary_get",
        "parameters": [
          {
            "in": "query",
            "name": "days",
            "required": false,
            "schema": {
              "default": 30,
              "maximum": 365,
              "minimum": 1,
              "title": "Days",
              "type": "integer"
            }
          },
          {
            "description": "Tenant scope override (superadmin/developer only)",
            "in": "query",
            "name": "tenant_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tenant scope override (superadmin/developer only)",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Business Summary"
      }
    },
    "/api/reports/customer-segmentation": {
      "get": {
        "description": "Return customer segmentation buckets for the dashboard.",
        "operationId": "get_customer_segments_api_reports_customer_segmentation_get",
        "parameters": [
          {
            "in": "query",
            "name": "days",
            "required": false,
            "schema": {
              "default": 180,
              "maximum": 365,
              "minimum": 1,
              "title": "Days",
              "type": "integer"
            }
          },
          {
            "description": "Tenant scope override (superadmin/developer only)",
            "in": "query",
            "name": "tenant_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tenant scope override (superadmin/developer only)",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Customer Segments"
      }
    },
    "/api/reports/customer-segments": {
      "get": {
        "description": "Return customer segmentation buckets for the dashboard.",
        "operationId": "get_customer_segments_api_reports_customer_segments_get",
        "parameters": [
          {
            "in": "query",
            "name": "days",
            "required": false,
            "schema": {
              "default": 180,
              "maximum": 365,
              "minimum": 1,
              "title": "Days",
              "type": "integer"
            }
          },
          {
            "description": "Tenant scope override (superadmin/developer only)",
            "in": "query",
            "name": "tenant_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tenant scope override (superadmin/developer only)",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Customer Segments"
      }
    },
    "/api/reports/loyalty-stats": {
      "get": {
        "description": "Return loyalty program KPIs for the dashboard.",
        "operationId": "get_loyalty_stats_api_reports_loyalty_stats_get",
        "parameters": [
          {
            "in": "query",
            "name": "days",
            "required": false,
            "schema": {
              "default": 30,
              "maximum": 365,
              "minimum": 1,
              "title": "Days",
              "type": "integer"
            }
          },
          {
            "description": "Tenant scope override (superadmin/developer only)",
            "in": "query",
            "name": "tenant_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tenant scope override (superadmin/developer only)",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Loyalty Stats"
      }
    },
    "/api/reports/revenue-chart": {
      "get": {
        "description": "Get revenue data for charts grouped by time period.",
        "operationId": "get_revenue_chart_api_reports_revenue_chart_get",
        "parameters": [
          {
            "in": "query",
            "name": "days",
            "required": false,
            "schema": {
              "default": 30,
              "maximum": 365,
              "minimum": 1,
              "title": "Days",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "group_by",
            "required": false,
            "schema": {
              "default": "day",
              "pattern": "^(day|week|month)$",
              "title": "Group By",
              "type": "string"
            }
          },
          {
            "description": "Tenant scope override (superadmin/developer only)",
            "in": "query",
            "name": "tenant_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tenant scope override (superadmin/developer only)",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Revenue Chart"
      }
    },
    "/api/reports/summary": {
      "get": {
        "description": "Return consolidated business metrics for admin dashboards.",
        "operationId": "get_business_summary_api_reports_summary_get",
        "parameters": [
          {
            "in": "query",
            "name": "days",
            "required": false,
            "schema": {
              "default": 30,
              "maximum": 365,
              "minimum": 1,
              "title": "Days",
              "type": "integer"
            }
          },
          {
            "description": "Tenant scope override (superadmin/developer only)",
            "in": "query",
            "name": "tenant_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tenant scope override (superadmin/developer only)",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Business Summary"
      }
    },
    "/api/reports/top-services": {
      "get": {
        "description": "Return top performing services within the requested window.",
        "operationId": "get_top_services_api_reports_top_services_get",
        "parameters": [
          {
            "in": "query",
            "name": "days",
            "required": false,
            "schema": {
              "default": 30,
              "maximum": 365,
              "minimum": 1,
              "title": "Days",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 50,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "description": "Tenant scope override (superadmin/developer only)",
            "in": "query",
            "name": "tenant_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tenant scope override (superadmin/developer only)",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Top Services"
      }
    },
    "/api/secure/ping": {
      "get": {
        "description": "Authenticated health probe used by tests and rate-limit validation.\n\nEnforces a per user+tenant rate limit using the configurable\nRATE_LIMIT_USER_TENANT_* settings (overridable at runtime via dev tools).",
        "operationId": "secure_ping_api_secure_ping_get",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          },
          {
            "in": "header",
            "name": "X-Bypass-Tenant-Cache",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Bypass-Tenant-Cache"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Secure Ping",
        "tags": [
          "secure"
        ]
      }
    },
    "/api/subscriptions/cancel-subscription": {
      "post": {
        "description": "Cancel the tenant's active subscription.",
        "operationId": "cancel_subscription_api_subscriptions_cancel_subscription_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Cancel Subscription",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/cancel-trial": {
      "post": {
        "operationId": "cancel_trial_api_subscriptions_cancel_trial_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Cancel Trial",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/invoices": {
      "get": {
        "operationId": "get_invoices_api_subscriptions_invoices_get",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Invoices",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/modules": {
      "get": {
        "operationId": "list_modules_api_subscriptions_modules_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List Modules",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/pause": {
      "post": {
        "operationId": "pause_subscription_api_subscriptions_pause_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Pause Subscription",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/payment-methods": {
      "get": {
        "operationId": "get_payment_methods_api_subscriptions_payment_methods_get",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Payment Methods",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/plans": {
      "get": {
        "operationId": "list_plans_api_subscriptions_plans_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlanOut"
                  },
                  "title": "Response List Plans Api Subscriptions Plans Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List Plans",
        "tags": [
          "subscriptions"
        ]
      },
      "post": {
        "operationId": "create_plan_api_subscriptions_plans_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Create Plan",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/plans/all": {
      "get": {
        "description": "List all plans including archived.",
        "operationId": "list_all_plans_api_subscriptions_plans_all_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PlanOut"
                  },
                  "title": "Response List All Plans Api Subscriptions Plans All Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List All Plans",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/plans/{plan_id}": {
      "put": {
        "operationId": "update_plan_api_subscriptions_plans__plan_id__put",
        "parameters": [
          {
            "in": "path",
            "name": "plan_id",
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Update Plan",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/plans/{plan_id}/archive": {
      "post": {
        "operationId": "archive_plan_api_subscriptions_plans__plan_id__archive_post",
        "parameters": [
          {
            "in": "path",
            "name": "plan_id",
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Archive Plan",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/plans/{plan_id}/restore": {
      "post": {
        "operationId": "restore_plan_api_subscriptions_plans__plan_id__restore_post",
        "parameters": [
          {
            "in": "path",
            "name": "plan_id",
            "required": true,
            "schema": {
              "title": "Plan Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Restore Plan",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/portal": {
      "post": {
        "operationId": "open_portal_api_subscriptions_portal_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Open Portal",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/profile": {
      "get": {
        "operationId": "get_billing_profile_api_subscriptions_profile_get",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Billing Profile",
        "tags": [
          "subscriptions"
        ]
      },
      "put": {
        "operationId": "put_billing_profile_api_subscriptions_profile_put",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Put Billing Profile",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/resume": {
      "post": {
        "operationId": "resume_subscription_api_subscriptions_resume_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Resume Subscription",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/setup-subscription": {
      "post": {
        "description": "Set up a real subscription with Yoco for recurring billing.",
        "operationId": "setup_subscription_api_subscriptions_setup_subscription_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionSetup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Setup Subscription",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/start-trial": {
      "post": {
        "operationId": "start_trial_api_subscriptions_start_trial_post",
        "parameters": [
          {
            "in": "query",
            "name": "days",
            "required": false,
            "schema": {
              "default": 14,
              "title": "Days",
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Start Trial",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/subscription-status": {
      "get": {
        "description": "Get detailed subscription status including billing info.",
        "operationId": "get_subscription_status_api_subscriptions_subscription_status_get",
        "parameters": [
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Subscription Status",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/tenants/{tenant_id}": {
      "get": {
        "operationId": "get_tenant_subscription_api_subscriptions_tenants__tenant_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Tenant Subscription",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/tenants/{tenant_id}/assign-plan": {
      "post": {
        "operationId": "assign_plan_api_subscriptions_tenants__tenant_id__assign_plan_post",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantAssignPlan"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Assign Plan",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/tenants/{tenant_id}/history": {
      "get": {
        "operationId": "get_history_api_subscriptions_tenants__tenant_id__history_get",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get History",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/tenants/{tenant_id}/override": {
      "post": {
        "operationId": "set_override_api_subscriptions_tenants__tenant_id__override_post",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverridePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Set Override",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/tenants/{tenant_id}/overrides": {
      "get": {
        "operationId": "get_overrides_api_subscriptions_tenants__tenant_id__overrides_get",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Overrides",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/usage": {
      "get": {
        "description": "Compute module usage from real data.\n\n- core: number of orders created in window\n- loyalty: number of redemptions created/redeemed in window\n- billing: number of successful payments in window\n- analytics: number of distinct active users in window (via orders)\n- inventory: placeholder (0) unless you later add inventory events",
        "operationId": "get_usage_api_subscriptions_usage_get",
        "parameters": [
          {
            "in": "query",
            "name": "window",
            "required": false,
            "schema": {
              "default": "30d",
              "title": "Window",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-Tenant-ID",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Tenant-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Usage",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/subscriptions/webhook/yoco-subscription": {
      "post": {
        "description": "Handle Yoco subscription webhooks.",
        "operationId": "yoco_subscription_webhook_api_subscriptions_webhook_yoco_subscription_post",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Yoco Subscription Webhook",
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/api/tenants": {
      "get": {
        "operationId": "list_tenants_api_tenants_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TenantOut"
                  },
                  "title": "Response List Tenants Api Tenants Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List Tenants",
        "tags": [
          "tenants"
        ]
      },
      "post": {
        "operationId": "create_tenant_api_tenants_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Create Tenant",
        "tags": [
          "tenants"
        ]
      }
    },
    "/api/tenants/{tenant_id}": {
      "delete": {
        "operationId": "delete_tenant_api_tenants__tenant_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Delete Tenant",
        "tags": [
          "tenants"
        ]
      },
      "get": {
        "operationId": "get_tenant_api_tenants__tenant_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Tenant",
        "tags": [
          "tenants"
        ]
      },
      "patch": {
        "operationId": "update_tenant_api_tenants__tenant_id__patch",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Update Tenant",
        "tags": [
          "tenants"
        ]
      }
    },
    "/api/tenants/{tenant_id}/admins": {
      "post": {
        "operationId": "assign_admin_api_tenants__tenant_id__admins_post",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminAssign"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Assign Admin",
        "tags": [
          "tenants"
        ]
      }
    },
    "/api/tenants/{tenant_id}/admins/{user_id}": {
      "delete": {
        "operationId": "remove_admin_api_tenants__tenant_id__admins__user_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Remove Admin",
        "tags": [
          "tenants"
        ]
      }
    },
    "/api/tenants/{tenant_id}/branding": {
      "get": {
        "operationId": "get_branding_api_tenants__tenant_id__branding_get",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandingOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get Branding",
        "tags": [
          "tenants"
        ]
      },
      "put": {
        "operationId": "update_branding_api_tenants__tenant_id__branding_put",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrandingUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandingOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Update Branding",
        "tags": [
          "tenants"
        ]
      }
    },
    "/api/tenants/{tenant_id}/branding/assets": {
      "get": {
        "operationId": "list_branding_assets_api_tenants__tenant_id__branding_assets_get",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List Branding Assets",
        "tags": [
          "tenants"
        ]
      }
    },
    "/api/tenants/{tenant_id}/branding/assets/{field}": {
      "post": {
        "operationId": "upload_branding_asset_api_tenants__tenant_id__branding_assets__field__post",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "field",
            "required": true,
            "schema": {
              "title": "Field",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_branding_asset_api_tenants__tenant_id__branding_assets__field__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandingAssetUploadOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Upload Branding Asset",
        "tags": [
          "tenants"
        ]
      }
    },
    "/api/tenants/{tenant_id}/invite": {
      "post": {
        "description": "Generate a one-time invite token and email it to the client-admin",
        "operationId": "invite_tenant_admin_api_tenants__tenant_id__invite_post",
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "title": "Tenant Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantInvite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Invite Tenant Admin",
        "tags": [
          "tenants"
        ]
      }
    },
    "/api/users": {
      "get": {
        "description": "List users (admin only) with pagination, optional search and sorting",
        "operationId": "list_users_api_users_get",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "minimum": 1,
              "title": "Page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "default": 10,
              "minimum": 1,
              "title": "Per Page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "pattern": "^(first_name|last_name|email|phone|role)$",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort By"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "default": "asc",
              "pattern": "^(asc|desc)$",
              "title": "Sort Order",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUsers"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "List Users",
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/manual": {
      "post": {
        "operationId": "manual_create_user_api_users_manual_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualUserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__plugins__users__routes__UserOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Manual Create User",
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/search": {
      "get": {
        "operationId": "search_users_api_users_search_get",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "minLength": 1,
              "title": "Query",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Search Users",
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/vehicles/search": {
      "get": {
        "description": "Search vehicles by plate/make/model or owner name/phone; include total washes & last wash date.\nThis supports the staff vehicle manager UI.",
        "operationId": "search_vehicles_api_users_vehicles_search_get",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "minLength": 1,
              "title": "Q",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Search Vehicles",
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/{user_id}": {
      "get": {
        "operationId": "get_user_api_users__user_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__plugins__users__routes__UserOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get User",
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "update_user_api_users__user_id__patch",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__plugins__users__routes__UserOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Update User",
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/{user_id}/vehicles": {
      "get": {
        "operationId": "get_user_vehicles_api_users__user_id__vehicles_get",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/VehicleOut"
                  },
                  "title": "Response Get User Vehicles Api Users  User Id  Vehicles Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Get User Vehicles",
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "add_vehicle_api_users__user_id__vehicles_post",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Add Vehicle",
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/{user_id}/vehicles/{vehicle_id}": {
      "delete": {
        "operationId": "delete_vehicle_api_users__user_id__vehicles__vehicle_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "vehicle_id",
            "required": true,
            "schema": {
              "title": "Vehicle Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Delete Vehicle",
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "update_vehicle_api_users__user_id__vehicles__vehicle_id__patch",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "vehicle_id",
            "required": true,
            "schema": {
              "title": "Vehicle Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "summary": "Update Vehicle",
        "tags": [
          "users"
        ]
      }
    },
    "/health/": {
      "get": {
        "description": "Basic health check endpoint.",
        "operationId": "health_check_health__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "title": "Response Health Check Health  Get",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Health Check",
        "tags": [
          "health"
        ]
      }
    },
    "/health/detailed": {
      "get": {
        "description": "Detailed health check with dependency status.",
        "operationId": "detailed_health_check_health_detailed_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "title": "Response Detailed Health Check Health Detailed Get",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Detailed Health Check",
        "tags": [
          "health"
        ]
      }
    },
    "/health/live": {
      "get": {
        "description": "Liveness check for Kubernetes/container orchestration.",
        "operationId": "liveness_check_health_live_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "title": "Response Liveness Check Health Live Get",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Liveness Check",
        "tags": [
          "health"
        ]
      }
    },
    "/health/metrics": {
      "get": {
        "description": "Basic application metrics.\n\nAlways present in OpenAPI for contract stability. If METRICS_ENABLED is not\nset (default), returns a minimal payload indicating disabled state. When\nenabled, returns aggregate counts and environment info.",
        "operationId": "get_metrics_health_metrics_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "title": "Response Get Metrics Health Metrics Get",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Get Metrics",
        "tags": [
          "health"
        ]
      }
    },
    "/health/ready": {
      "get": {
        "description": "Full readiness check (DB + optional Redis + basic model access).\n\nBehavior modifiers (environment variables):\n  HEALTH_READY_SKIP_DEEP=1  -> Skip DB & Redis checks (fast path) returning cached/nominal 200.\n  HEALTH_READY_CACHE_TTL=seconds (default 5) -> Cache successful deep result briefly to reduce load.\n\nRecommended: platform probes use /health/ready-lite; this endpoint is for diagnostics.\nReturns 503 if a hard dependency is down (unless skip flag set).",
        "operationId": "readiness_check_health_ready_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "title": "Response Readiness Check Health Ready Get",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Readiness Check",
        "tags": [
          "health"
        ]
      }
    }
  }
}
